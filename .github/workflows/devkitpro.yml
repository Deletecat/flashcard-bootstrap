name: Build flashcard-bootstrap with devkitPro

on: workflow_dispatch

jobs:
  build:
    runs-on: ubuntu-latest
    container: devkitpro/devkitarm
    name: Build with Docker using devkitARM
    outputs:
      commit_tag: ${{ steps.make-cias.outputs.commit_tag }}
      commit_hash: ${{ steps.make-cias.outputs.commit_hash }}
      author_name: ${{ steps.make-cias.outputs.author_name }}
      committer_name: ${{ steps.make-cias.outputs.committer_name }}
      commit_subject: ${{ steps.make-cias.outputs.commit_subject }}
      commit_message: ${{ steps.make-cias.outputs.commit_message }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v1
        with:
          submodules: recursive
      - name: Build dsbize
        run: |
          sudo apt-get update
          sudo apt-get install gcc -y
          mkdir tools
          gcc tools_src/dsbize.c -o tools/dsbize
      - name: Make flashcard-bootstrap
        run: |
          make dist

          echo ::set-output name=commit_tag::$(git describe --abbrev=0 --tags)
          echo ::set-output name=commit_hash::$(git log --format=%h -1)

          # Webhook info
          echo "::set-output name=author_name::$(git log -1 $GITHUB_SHA --pretty=%aN)"
          echo "::set-output name=committer_name::$(git log -1 $GITHUB_SHA --pretty=%cN)"
          echo "::set-output name=commit_subject::$(git log -1 $GITHUB_SHA --pretty=%s)"
          echo "::set-output name=commit_message::$(git log -1 $GITHUB_SHA --pretty=%b)"
      - name: Prepare for build publishing
        run: |
          mkdir -p ~/artifacts
          cp flashcard-bootstrap-0.0.1.tar.bz2 ~/artifacts
      - name: Publish build to GH Actions
        uses: actions/upload-artifact@v2
        with:
          path: ~/artifacts/*
          name: build

